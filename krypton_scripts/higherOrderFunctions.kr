{

    def map(func, list) {
        result = [];

        for(value in list) {
            result = result + func(value);
        }

        print("Initial list");
        print(list);

        print("FInal list");
        print(result);
    }
    print("Map function result");
    map(lambda(x) { return x + 1; }, [1, 2, 3]);


    def filter(func, list) {
        result = [];

        for(value in list) {
            if(func(value)) {
                result = result + value;
            }
        }

        print("Initial list");
        print(list);

        print("FInal list");
        print(result);

    }


    print("");
    print("Filter function result");
    filter(lambda(x) { return x % 2 == 0; }, [1, 2, 3, 4]);

    ##########################################
    # last higher order function --> reduce
    def reduce(func, list, acc) {
        result = acc;
        for(value in list) {
            result = func(result, value);
        }

        print("Initial list");
        print(list);

        print("final result");
        print(result);

    }

    print("");
    print("Reduce function result");

    reduce(lambda(acc, x) { return acc + x; }, [1, 2, 3], 0);

}