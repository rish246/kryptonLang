{
    def printList(lst, len) {
        res = "";
        for(i = 0; i < len; i = i + 1) {
            res = res + lst[i] + ", ";
        }
        print(res);
    }
    def map(func, list, lenList) {
        result = [];

        for(i = 0; i < lenList; i = i + 1) {
            result = result + func(list[i]);
        }

        print("Initial list");
        printList(list, lenList);

        print("FInal list");
        printList(result, lenList);
    }

    map(lambda(x) { return x + 1; }, [1, 2, 3], 3);


    def filter(func, list, lenList) {
        result = [];
        resultLen = 0;

        for(i = 0; i < lenList; i = i + 1) {
            if(func(list[i])) {
                result = result + list[i];
                resultLen = resultLen + 1;
            }
        }

        print("Initial list");
        printList(list, lenList);

        print("FInal list");
        printList(result, resultLen);

    }

    filter(lambda(x) { return x % 2 == 0; }, [1, 2, 3, 4], 4);

    ##########################################
    # last higher order function --> reduce
    def reduce(func, list, acc, lenList) {
        result = acc;
        for(i = 0; i < lenList; i = i + 1) {
            result = func(result, list[i]);
        }

        print("Initial list");
        printList(list, lenList);

        print("final result");
        print(result);

    }

    reduce(lambda(acc, x) { return acc + x; }, [1, 2, 3], 0, 3);

}