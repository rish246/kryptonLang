def inorderTraversal(head) {
    res = "";
    if(head != null) {
        res = res + inorderTraversal(head["left"]);
        res = res + head["value"] + ", ";
        res = res + inorderTraversal(head["right"]);
    }
    return res;
}

headNode = {"value" : 2, "left" : null, "right" : null};
leftNode = {"value" : 1, "left" : null, "right" : null};
rightNode = {"value" : 3, "left" : null, "right" : null};

leftLeftNode = {"value" : 4, "left" : null, "right" : null};
rightLeftNode = {"value" : 5, "left" : null, "right" : null};


# start linking
headNode["left"] = leftNode;
headNode["right"] = rightNode;

leftNode["left"] = leftLeftNode;
rightNode["left"] = rightLeftNode;
# print
print("Inorder traversal of our binary tree");
print(inorderTraversal(headNode));


